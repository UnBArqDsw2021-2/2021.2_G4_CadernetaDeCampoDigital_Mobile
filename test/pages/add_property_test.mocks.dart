// Mocks generated by Mockito 5.1.0 from annotations
// in caderneta_campo_digital/test/pages/add_property_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:caderneta_campo_digital/controllers/add_property/add_property_controller.dart'
    as _i3;
import 'package:caderneta_campo_digital/services/add_property/add_property_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAddPropertyService_0 extends _i1.Fake
    implements _i2.AddPropertyService {}

/// A class which mocks [AddPropertyController].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddPropertyController extends _i1.Mock
    implements _i3.AddPropertyController {
  MockAddPropertyController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AddPropertyService get addPropertyService =>
      (super.noSuchMethod(Invocation.getter(#addPropertyService),
          returnValue: _FakeAddPropertyService_0()) as _i2.AddPropertyService);
  @override
  set addPropertyService(_i2.AddPropertyService? _addPropertyService) => super
      .noSuchMethod(Invocation.setter(#addPropertyService, _addPropertyService),
          returnValueForMissingStub: null);
  @override
  _i4.Future<dynamic> sendForm(Map<String, dynamic>? formsValue) =>
      (super.noSuchMethod(
        Invocation.method(#sendForm, [formsValue]),
        returnValue: Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}
